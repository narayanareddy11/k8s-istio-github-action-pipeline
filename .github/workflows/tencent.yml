name: BookInfo CI/CD with Istio

on:
  push:
    branches:
      - main

jobs:
  setup-minikube:
    name: Setup Minikube & Istio
    runs-on: k8s-istio
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Start Minikube
        run: |
          if ! minikube status; then
            echo "Starting Minikube..."
            minikube start
          else
            echo "Minikube is already running."
          fi

  Minikube_IP:
    runs-on: k8s-istio
    needs: setup-minikube
    steps:
      - name: Get Minikube IP
        run: echo "MINIKUBE_IP=$(minikube ip)" >> $GITHUB_ENV

  Install_Istio:
    runs-on: k8s-istio
    needs: setup-minikube
    steps:
      - name: Install Istio
        run: |
          curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.25.0 sh -
          cd istio-1.25.0
          export PATH=$PWD/bin:$PATH
          istioctl install --set profile=demo -y

  Deploy_BookInfo:
    runs-on: k8s-istio
    needs: setup-minikube
    steps:
      - name: Deploy BookInfo App
        run: |
          kubectl apply -f istio-1.25.0/samples/bookinfo/platform/kube/bookinfo.yaml
          kubectl apply -f istio-1.25.0/samples/bookinfo/networking/bookinfo-gateway.yaml
          kubectl rollout status deployment/productpage-v1 -n default --timeout=120s

  check-istio:
    name: Check Istio Status
    runs-on: k8s-istio
    needs: setup-minikube
    steps:
      - name: Verify Istio Installation
        run: istioctl verify-install

  deploy-monitoring:
    name: Deploy Monitoring (Grafana, Prometheus, Kiali)
    runs-on: k8s-istio
    needs: setup-minikube
    steps:
      - name: Deploy Monitoring Services
        run: |
          kubectl apply -f istio-1.25.0/samples/addons/grafana.yaml
          kubectl apply -f istio-1.25.0/samples/addons/prometheus.yaml
          kubectl apply -f istio-1.25.0/samples/addons/kiali.yaml
          kubectl rollout status deployment/grafana -n istio-system --timeout=120s
          kubectl rollout status deployment/prometheus -n istio-system --timeout=120s
          kubectl rollout status deployment/kiali -n istio-system --timeout=120s

  monitor-grafana:
    name: Monitor Grafana
    runs-on: k8s-istio
    needs: deploy-monitoring
    steps:
      - name: Check Grafana URL
        run: |
          GRAFANA_URL="http://${MINIKUBE_IP}:3000"
          echo "Checking Grafana: $GRAFANA_URL"
          curl -s --head --fail "$GRAFANA_URL" || exit 1

  monitor-prometheus:
    name: Monitor Prometheus
    runs-on: k8s-istio
    needs: deploy-monitoring
    steps:
      - name: Check Prometheus URL
        run: |
          PROMETHEUS_URL="http://${MINIKUBE_IP}:9090"
          echo "Checking Prometheus: $PROMETHEUS_URL"
          curl -s --head --fail "$PROMETHEUS_URL" || exit 1

  monitor-kiali:
    name: Monitor Kiali
    runs-on: k8s-istio
    needs: deploy-monitoring
    steps:
      - name: Check Kiali URL
        run: |
          KIALI_URL="http://${MINIKUBE_IP}:20001"
          echo "Checking Kiali: $KIALI_URL"
          curl -s --head --fail "$KIALI_URL" || exit 1

  infra-check:
    name: Infrastructure Check
    runs-on: k8s-istio
    needs: setup-minikube
    steps:
      - name: Check Nodes & Pods
        run: |
          kubectl get nodes
          kubectl get pods -A

  security-scan:
    name: Trivy Security Scanning
    runs-on: k8s-istio
    needs: setup-minikube
    steps:
      - name: Install Trivy
        run: |
          sudo apt-get install wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.44.1/trivy_0.44.1_Linux-64bit.deb
          sudo dpkg -i trivy_0.44.1_Linux-64bit.deb

      - name: Scan BookInfo Images
        run: |
          trivy image docker.io/istio/examples-bookinfo-productpage-v1:1.25.0
          trivy image docker.io/istio/examples-bookinfo-reviews-v1:1.25.0

  deployment-status:
    name: Check Deployment Status
    runs-on: k8s-istio
    needs: setup-minikube
    steps:
      - name: Verify Gateway & BookInfo Deployment
        run: |
          kubectl get gateway -n default
          kubectl get virtualservice -n default
          kubectl get pods -n default

  run-tests:
    name: Run Tests
    runs-on: k8s-istio
    needs: Deploy_BookInfo
    steps:
      - name: Run Integration Tests
        run: |
          # Add commands to run your tests here
          echo "Running integration tests..."

  notify:
    name: Notify Team
    runs-on: k8s-istio
    needs: [monitor-grafana, monitor-prometheus, monitor-kiali, infra-check, security-scan, deployment-status, run-tests]
    steps:
      - name: Send Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  cleanup:
    name: Cleanup Resources
    runs-on: k8s-istio
    if: always()
    steps:
      - name: Delete Minikube Cluster
        run: minikube delete

  deploy:
    name: Final Deployment Step
    runs-on: k8s-istio
    needs: [notify, cleanup]
    steps:
      - name: Deployment Completed
        run: echo "BookInfo Deployment Successfully Completed!"