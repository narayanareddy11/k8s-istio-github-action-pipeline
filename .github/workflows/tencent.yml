name: BookInfo CI/CD with Istio

on:
  push:
    branches:
      - main

jobs:
  setup-minikube:
    name: Setup Minikube & Istio
    runs-on: self-hosted
    needs: [cleanup]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Start Minikube
        run: |
          if ! minikube status; then
            echo "Starting Minikube..."
            #minikube delete
            #minikube start --cpus=4 --memory=8192 --kubernetes-version=v1.30.0 --driver=virtualbox
            minikube start --cpus=4 --memory=8192 --disk-size=50g --kubernetes-version=v1.28.3 --driver=virtualbox
            #minikube start 
          else
            echo "Minikube is already running."
          fi
      - name: Check if Istio is Installed
        shell: bash
        run: |
          if istioctl version; then
            echo "Istio is already installed."
          else
            echo "Istio is not installed. Installing Istio..."
            curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.25.0 sh -
            cd istio-1.25.0
            export PATH=$PWD/bin:$PATH
            istioctl install --set profile=demo -y
            echo "****** profile=demo set *******"
            istioctl x precheck
            istioctl version
          fi

  Minikube_IP:
    runs-on: self-hosted
    needs: setup-minikube
    steps:
      - name: Get Minikube IP
        shell: bash
        run: echo "MINIKUBE_IP=$(minikube ip)" >> $GITHUB_ENV

  Install_Istio:
    runs-on: self-hosted
    needs: setup-minikube
    steps:
      - name: Check if Istio version
        shell: bash
        run: |
          if istioctl version; then
            echo "Istio is already installed."
          else
            echo "Istio is not installed"
          fi

  Deploy_BookInfo:
    runs-on: self-hosted
    needs: setup-minikube
    steps:
      - name: Deploy BookInfo App
        run: |
          kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml
          kubectl apply -f samples/bookinfo/networking/bookinfo-gateway.yaml
          kubectl rollout status deployment/productpage-v1 -n default --timeout=120s

  check-istio:
    name: Check Istio Status
    runs-on: self-hosted
    needs: setup-minikube
    steps:
      - name: Verify Istio Installation
        shell: bash
        run: istioctl version

  deploy-monitoring:
    name: Deploy Monitoring (Grafana, Prometheus, Kiali)
    runs-on: self-hosted
    needs: setup-minikube
    steps:
      - name: Deploy Monitoring Services
        run: |
          kubectl get namespace istio-system || kubectl create namespace istio-system
          kubectl apply -f samples/addons/grafana.yaml
          kubectl apply -f samples/addons/prometheus.yaml
          kubectl apply -f samples/addons/kiali.yaml
          kubectl rollout status deployment/grafana -n istio-system --timeout=120s
          kubectl rollout status deployment/prometheus -n istio-system --timeout=120s
          kubectl rollout status deployment/kiali -n istio-system --timeout=120s

  monitor-grafana:
    name: Monitor Grafana
    runs-on: self-hosted
    needs: [deploy-monitoring, Minikube_IP]
    steps:
      - name: Check Grafana URL
        shell: bash
        run: |
          GRAFANA_URL="http://${MINIKUBE_IP}:3000"
          echo "Checking Grafana: $GRAFANA_URL"
          curl -s --head --fail "$GRAFANA_URL" || exit 1

  monitor-prometheus:
    name: Monitor Prometheus
    runs-on: self-hosted
    needs: [deploy-monitoring, Minikube_IP]
    steps:
      - name: Check Prometheus URL
        shell: bash
        run: |
          PROMETHEUS_URL="http://${MINIKUBE_IP}:9090"
          echo "Checking Prometheus: $PROMETHEUS_URL"
          curl -s --head --fail "$PROMETHEUS_URL" || exit 1

  monitor-kiali:
    name: Monitor Kiali
    runs-on: self-hosted
    needs: [deploy-monitoring, Minikube_IP]
    steps:
      - name: Check Kiali URL
        shell: bash
        run: |
          KIALI_URL="http://${MINIKUBE_IP}:20001"
          echo "Checking Kiali: $KIALI_URL"
          curl -s --head --fail "$KIALI_URL" || exit 1

  infra-check:
    name: Infrastructure Check
    runs-on: self-hosted
    needs: [setup-minikube, check-istio, Deploy_BookInfo]
    steps:
      - name: Check Infrastructure
        shell: bash
        run: |
          kubectl get nodes
          kubectl get pods -A
          echo "Kubernetes Version:"
          kubectl version --short
          echo "Minikube Version:"
          minikube version
          echo "Istioctl Version:"
          istioctl version

  security-scan:
    name: Trivy Security Scanning
    runs-on: self-hosted
    needs: [setup-minikube, infra-check]
    steps:
      - name: Install Trivy
        shell: bash
        run: |
          sudo apt-get install wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.44.1/trivy_0.44.1_Linux-64bit.deb
          sudo dpkg -i trivy_0.44.1_Linux-64bit.deb

      - name: Scan BookInfo Images
        run: |
          trivy image docker.io/istio/examples-bookinfo-productpage-v1:1.25.0
          trivy image docker.io/istio/examples-bookinfo-reviews-v1:1.25.0

  deployment-status:
    name: Check Deployment Status
    runs-on: self-hosted
    needs: setup-minikube
    steps:
      - name: Verify Gateway & BookInfo Deployment
        run: |
          kubectl get gateway -n default
          kubectl get virtualservice -n default
          kubectl get pods -n default
  run-tests:
    name: Run Tests
    runs-on: self-hosted
    needs: Deploy_BookInfo
    steps:
      - name: Run Integration Tests
        run: |
          # Add commands to run your tests here
          echo "Running integration tests..."

  notify:
    name: Notify Team
    runs-on: self-hosted
    needs: [monitor-grafana, monitor-prometheus, monitor-kiali, infra-check, security-scan, deployment-status, run-tests]
    steps:
      - name: Send Notification
        run: |
          echo "Job Status: ${{ job.status }}"
          echo "Repository: ${{ github.repository }}"
          echo "Commit Message: ${{ github.event.head_commit.message }}"
          echo "Commit Author: ${{ github.event.head_commit.author.name }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Job: ${{ github.job }}"
          echo "Event Name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"

  cleanup:
    name: Cleanup Resources
    runs-on: self-hosted

    if: always()
    steps:

      - name: Start Minikube
        run: |
          if ! minikube status; then
            echo "Starting Minikube..."
            #minikube delete
            #minikube start --cpus=4 --memory=8192 --kubernetes-version=v1.30.0 --driver=virtualbox
            minikube start --kubernetes-version=v1.32.0
            #minikube start 
          else
            echo "Minikube is already running."
            kubectl delete all --all --namespace=default
          fi

  deploy:
    name: Final Deployment Step
    runs-on: self-hosted
    needs: [notify, cleanup]
    steps:
      - name: Display Deployment URLs
        shell: bash
        run: |
          echo "BookInfo Deployment Successfully Completed!"
          echo "Grafana URL: http://${MINIKUBE_IP}:3000"
          echo "Prometheus URL: http://${MINIKUBE_IP}:9090"
          echo "Kiali URL: http://${MINIKUBE_IP}:20001"